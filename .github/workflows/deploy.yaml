# name: Build and deploy on Docker Hub

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'server/**'

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v2 

#       - name: login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: ./server
#           file: ./server/Dockerfile
#           push: true
#           tags: saiabhiramjaini/punarnavah-server:latest
      
#       - name: verify Docker image
#         run: docker pull saiabhiramjaini/punarnavah-server:latest
      
#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USERNAME }}
#           key: ${{ secrets.SSH_KEY }}
#           script: |
#             sudo docker pull saiabhiramjaini/punarnavah-server:latest
#             sudo docker stop punarnavah-server || true
#             sudo docker rm punarnavah-server || true
#             sudo docker run -d -p 8080:8080 \
#               -e PORT=${{ secrets.ENV_PORT }} \
#               -e DATABASE_URL=${{ secrets.ENV_DATABASE_URL }} \
#               -e JWT_SECRET=${{ secrets.ENV_JWT_SECRET }} \
#               -e SENDER_EMAIL=${{ secrets.ENV_SENDER_EMAIL }} \
#               -e SENDER_PASS=${{ secrets.ENV_SENDER_PASS }} \
#               --name punarnavah-server saiabhiramjaini/punarnavah-server:latest



name: Build and deploy on Docker Hub

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2 

      - name: login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: saiabhiramjaini/punarnavah-server:latest
      
      - name: verify Docker image
        run: docker pull saiabhiramjaini/punarnavah-server:latest
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Add debugging information
            echo "Starting deployment..."
            
            # Check Docker status
            sudo systemctl status docker
            
            # Login to Docker Hub
            echo "Logging into Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            # Show Docker info
            echo "Docker info:"
            sudo docker info
            
            # Pull the image with explicit full path
            echo "Pulling image..."
            sudo docker pull saiabhiramjaini/punarnavah-server:latest
            
            # Show pulled images
            echo "Available images:"
            sudo docker images
            
            # Stop and remove existing container
            echo "Cleaning up existing container..."
            sudo docker stop punarnavah-server || true
            sudo docker rm punarnavah-server || true
            
            # Run new container
            echo "Starting new container..."
            sudo docker run -d -p 8080:8080 \
              -e PORT=${{ secrets.ENV_PORT }} \
              -e DATABASE_URL=${{ secrets.ENV_DATABASE_URL }} \
              -e JWT_SECRET=${{ secrets.ENV_JWT_SECRET }} \
              -e SENDER_EMAIL=${{ secrets.ENV_SENDER_EMAIL }} \
              -e SENDER_PASS=${{ secrets.ENV_SENDER_PASS }} \
              --name punarnavah-server saiabhiramjaini/punarnavah-server:latest
            
            # Verify container is running
            echo "Checking container status..."
            sudo docker ps
            
            # Check container logs
            echo "Container logs:"
            sudo docker logs punarnavah-server